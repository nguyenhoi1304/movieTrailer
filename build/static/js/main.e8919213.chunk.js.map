{"version":3,"sources":["components/MovieList/MovieList.module.css","components/MovieDetail/MovieDetail.module.css","components/RequestApi.js","components/Navbar.js","components/MovieList/MovieList.js","components/MovieDetail/MovieDetail.js","pages/browse/Browse.jsx","pages/search/Search.jsx","App.js","serviceWorker.js","index.js","pages/browse/Browse.module.css","components/Navbar.module.css"],"names":["module","exports","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","API_KEY","requests","fetchTrending","concat","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","Navbar","_useState","useState","_useState2","_slicedToArray","showNav","setShowNav","_useState3","_useState4","movies","setMovies","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","httpError","setHttpError","showBackground","window","scrollY","useEffect","removeEventListener","addEventListener","_ref","_asyncToGenerator","_callee","response","dataMovies","results","imgs","img","_context","fetch","ok","json","filter","item","backdrop_path","Math","floor","random","apply","arguments","fetchMovies","message","React","createElement","className","classes","FilmsLoading","FilmsError","active","navbar","href","alt","textMovie","searchIcon","style","width","height","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","content","navBarImg","src","information","listBtn","overview","MovieList","props","console","log","container","map","movie","id","movieImg","MovieDetail","trailer","setTrailer","inForMovie","imgInFor","data","fetchApiTrailer","movieRender","find","site","Fragment","content_left","title","release_date","vote_average","YouTube","videoId","opts","playerVars","autoplay","ImgInformationContext","createContext","Browse","setImgInFor","open","setOpen","_Apis","trendDings","setTrendDings","netflixOriginals","setNetflixOriginals","topRated","setTopRated","actionMovies","setActionMovies","_useState9","_useState10","comedyMovies","setComedyMovies","_useState11","_useState12","horrorMovies","setHorrorMovies","_useState13","_useState14","romanceMovies","setRomanceMovies","_useState15","_useState16","documentaries","setDocumentaries","dataMoviesNetflixOriginals","_ref2","_callee2","_context2","_ref3","_callee3","_context3","_ref4","_callee4","_context4","_ref5","_callee5","_context5","_ref6","_callee6","_context6","_ref7","_callee7","_context7","_ref8","_callee8","_context8","Apis","Provider","Search","App","BrowserRouter","Routes","Route","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e8919213.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MovieList_content__1GzEU\",\"item\":\"MovieList_item__1XMFj\",\"movieImg\":\"MovieList_movieImg__3iqJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trailer\":\"MovieDetail_trailer__GWo69\",\"content_left\":\"MovieDetail_content_left__ya04E\",\"title\":\"MovieDetail_title__1o3rL\"};","import { useEffect, useState } from \"react\";\r\n\r\nexport const API_KEY = \"9c1861230a76a1861f77f93cb0cacc9a\";\r\n\r\nexport const requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\r\n};\r\n\r\nexport const Apis = () => {\r\n  const [trendDings, setTrendDings] = useState([]);\r\n  const [netflixOriginals, setNetflixOriginals] = useState([]);\r\n  const [topRated, setTopRated] = useState([]);\r\n  const [actionMovies, setActionMovies] = useState([]);\r\n  const [comedyMovies, setComedyMovies] = useState([]);\r\n  const [horrorMovies, setHorrorMovies] = useState([]);\r\n  const [romanceMovies, setRomanceMovies] = useState([]);\r\n  const [documentaries, setDocumentaries] = useState([]);\r\n\r\n  //Fetch api fetchNetflixOriginals:Original\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/${requests.fetchNetflixOriginals}`\r\n      );\r\n      const dataMoviesNetflixOriginals = await response.json();\r\n      setNetflixOriginals(dataMoviesNetflixOriginals.results);\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  //Fetch api fetchTrending:Xu hướng\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/${requests.fetchTrending}`\r\n      );\r\n      const dataMovies = await response.json();\r\n      setTrendDings(dataMovies.results);\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  //Fetch api fetchTopRated:Xếp hạng cao\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/${requests.fetchTopRated}`\r\n      );\r\n      const dataMovies = await response.json();\r\n      setTopRated(dataMovies.results);\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  //Fetch api fetchActionMovies:Hành động\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/${requests.fetchActionMovies}`\r\n      );\r\n      const dataMovies = await response.json();\r\n      setActionMovies(dataMovies.results);\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  //Fetch api fetchComedyMovies:Hài\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/${requests.fetchComedyMovies}`\r\n      );\r\n      const dataMovies = await response.json();\r\n      setComedyMovies(dataMovies.results);\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  //Fetch api fetchHorrorMovies: Kinh dị\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/${requests.fetchHorrorMovies}`\r\n      );\r\n      const dataMovies = await response.json();\r\n      setHorrorMovies(dataMovies.results);\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  //Fetch api fetchRomanceMovies: lãng mạn\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/${requests.fetchRomanceMovies}`\r\n      );\r\n      const dataMovies = await response.json();\r\n      setRomanceMovies(dataMovies.results);\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  //Fetch api fetchDocumentaries: tài liệu\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/${requests.fetchDocumentaries}`\r\n      );\r\n      const dataMovies = await response.json();\r\n      setDocumentaries(dataMovies.results);\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  // trả về các hàm chứa các Api được lấy từ sever\r\n  return {\r\n    trendDings,\r\n    netflixOriginals,\r\n    topRated,\r\n    actionMovies,\r\n    comedyMovies,\r\n    horrorMovies,\r\n    romanceMovies,\r\n    documentaries,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport { requests } from \"./RequestApi\";\r\n\r\nconst Navbar = () => {\r\n  const [showNav, setShowNav] = useState(false); // set Hiển thị shownavBackground khi scrollY > 100\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true); // hiển thị text loading khi đang chờ lấy dữ liệu từ database\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  const showBackground = () => {\r\n    if (window.scrollY > 100) {\r\n      setShowNav(true);\r\n    } else {\r\n      setShowNav(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showBackground();\r\n    return window.removeEventListener(\"scroll\", showBackground);\r\n  }, []);\r\n\r\n  window.addEventListener(\"scroll\", showBackground);\r\n\r\n  // get danh sách phim từ fetchNetflixOriginals\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/${requests.fetchNetflixOriginals}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Lỗi kết nối Sever\");\r\n      }\r\n      const dataMovies = await response.json();\r\n\r\n      //kết quả trả về từ api gọi thành công\r\n      let results = dataMovies.results;\r\n\r\n      //lọc mảng mới kiểm tra xem các phần tử có thuộc tính backdrop_path hay không\r\n      const imgs = results.filter((item) => item.backdrop_path !== null);\r\n      //ramdom 1 ảnh để hiển thị trên phần banner\r\n      const img = imgs[Math.floor(Math.random() * imgs.length)];\r\n      //set lại vào mảng để render ra giao diện\r\n      setMovies(img);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchMovies().catch((err) => {\r\n      setIsLoading(false);\r\n      setHttpError(err.message);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.FilmsLoading}>\r\n        <p>Loading....</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section className={classes.FilmsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <section className={showNav ? classes.active : classes.navbar}>\r\n        <a href=\"/\" alt=\"home\" className={classes.textMovie}>\r\n          Movie App\r\n        </a>\r\n        <a href=\"/search\" alt=\"search\" className={classes.searchIcon}>\r\n          <svg\r\n            style={{ width: \"25px\", height: \"40px\" }}\r\n            className=\"svg-inline--fa fa-search fa-w-16\"\r\n            fill=\"#ccc\"\r\n            aria-hidden=\"true\"\r\n            data-prefix=\"fas\"\r\n            data-icon=\"search\"\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 512 512\"\r\n          >\r\n            <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n          </svg>\r\n        </a>\r\n      </section>\r\n      <section className={classes.content}>\r\n        <img\r\n          className={classes.navBarImg}\r\n          src={`https://image.tmdb.org/t/p/w500/${movies.backdrop_path}`}\r\n          alt=\"films\"\r\n        />\r\n        <div className={classes.information}>\r\n          <h1>{movies.name}</h1>\r\n          <section className={classes.listBtn}>\r\n            <button>Play</button>\r\n            <button>My List</button>\r\n          </section>\r\n          <p>{movies.overview}</p>\r\n        </div>\r\n      </section>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport classes from \"./MovieList.module.css\";\r\n\r\nconst MovieList = (props) => {\r\n  console.log(props.movies);\r\n  return (\r\n    <div className={classes.container}>\r\n      {/* Phim Xu hướng */}\r\n      <section className={classes.content}>\r\n        <div className={classes.item}>\r\n          {/* kiểm tra xem có dữ liệu hay không có thì hiển thị ra giao diện */}\r\n          {props.movies &&\r\n            props.movies.map((movie) => (\r\n              <section key={movie.id}>\r\n                <img\r\n                  className={classes.movieImg}\r\n                  key={movie.id}\r\n                  src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\r\n                  alt=\"imgFilms\"\r\n                />\r\n              </section>\r\n            ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport classes from \"./MovieDetail.module.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport { API_KEY } from \"../RequestApi\";\r\n\r\nconst MovieDetail = (props) => {\r\n  const [trailer, setTrailer] = useState([]);\r\n  const inForMovie = props.imgInFor;\r\n\r\n  //sẽ gọi useEffect nhưng lúc này chưa Click  nên id= '', sau khi click thì id có giá trị sẽ chạy hàm useEffect sẽ cho ra api tương ứng với id của video với dependency: inForMovie là biến chứa iD của video được click\r\n  useEffect(() => {\r\n    const fetchApiTrailer = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${inForMovie.id}/videos?api_key=${API_KEY}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      setTrailer(data.results);\r\n    };\r\n    fetchApiTrailer().catch(console.err);\r\n  }, [inForMovie]);\r\n\r\n  const opts = {\r\n    height: \"400\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  // Lấy ra bộ phim phần tử đầu tiên  thỏa mãn điều kiện sau khi click\r\n  const movieRender = trailer\r\n    ? trailer.find((movie) =>\r\n        movie.site === \"YouTube\" && movie.type === \"Trailer\"\r\n          ? movie.type === \"Trailer\"\r\n          : inForMovie.backdrop_path\r\n      )\r\n    : [];\r\n\r\n  return (\r\n    <Fragment>\r\n      {inForMovie && (\r\n        <div className={classes.trailer}>\r\n          <div className={classes.content_left}>\r\n            <p className={classes.title}>{inForMovie.title}</p>\r\n            <hr />\r\n            <p></p>\r\n            <p>\r\n              <span>Release Date: </span>\r\n              {inForMovie.release_date}\r\n            </p>\r\n            <p>\r\n              <span>Vote: </span>\r\n              {inForMovie.vote_average} / 10\r\n            </p>\r\n            <p>{inForMovie.overview}</p>\r\n          </div>\r\n          <YouTube\r\n            videoId={movieRender.key}\r\n            id={movieRender.id}\r\n            opts={opts}\r\n            type={movieRender.trailer}\r\n            site={movieRender.YouTube}\r\n          />\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React, { createContext, useEffect, useRef, useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport MovieList from \"../../components/MovieList/MovieList\";\nimport { Apis } from \"../../components/RequestApi\";\nimport MovieDetail from \"../../components/MovieDetail/MovieDetail\";\nimport classes from \"./Browse.module.css\";\nexport const ImgInformationContext = createContext();\n\nfunction Browse(props) {\n  const [imgInFor, setImgInFor] = useState(\"\");\n  const [open, setOpen] = useState(true);\n  // import Apis và gọi hàm để lấy về các mảng api tương ứng với từng APi\n  const {\n    trendDings,\n    netflixOriginals,\n    topRated,\n    actionMovies,\n    comedyMovies,\n    horrorMovies,\n    romanceMovies,\n    documentaries,\n  } = Apis();\n\n  // nhận được thông tin ảnh khi click: truyền props con lên cha bằng useContext\n\n  const handlerImg = (props) => {\n    const imgInFor = props.movie;\n    console.log(imgInFor);\n    if (imgInFor.id === props.movie.id) {\n      setOpen(false);\n    }\n    setImgInFor(imgInFor);\n  };\n\n  return (\n    <div className=\"app\">\n      <ImgInformationContext.Provider value={handlerImg}>\n        <Navbar />\n        <section className={classes.container}>\n          <span className={classes.title}></span>\n          <MovieList movies={netflixOriginals} />\n        </section>\n\n        <section className={classes.container}>\n          <span className={classes.title}>Xu Hướng</span>\n          <MovieList movies={trendDings} />\n        </section>\n\n        <section className={classes.container}>\n          <span className={classes.title}>Xếp hạng cao</span>\n          <MovieList movies={topRated} />\n        </section>\n\n        <section className={classes.container}>\n          <span className={classes.title}>Hành động</span>\n          <MovieList movies={actionMovies} />\n        </section>\n\n        <section className={classes.container}>\n          <span className={classes.title}>Hài</span>\n          <MovieList movies={comedyMovies} />\n        </section>\n\n        <section className={classes.container}>\n          <span className={classes.title}>kinh Dị</span>\n          <MovieList movies={horrorMovies} />\n        </section>\n\n        <section className={classes.container}>\n          <span className={classes.title}>Lãng mạn</span>\n          <MovieList movies={romanceMovies} />\n        </section>\n\n        <section className={classes.container}>\n          <span className={classes.title}>Tài liệu</span>\n          <MovieList movies={documentaries} />\n        </section>\n\n        {open && <MovieDetail imgInFor={imgInFor} />}\n      </ImgInformationContext.Provider>\n    </div>\n  );\n}\n\nexport default Browse;\n","import React from \"react\";\n\nconst Search = () => {\n  return (\n    <div className=\"app\">\n      <h1>Search</h1>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Browse from \"./pages/browse/Browse\";\nimport Search from \"./pages/search/Search\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Browse />} />\n        <Route path=\"/search\" element={<Search />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Browse_title__1xQFn\",\"container\":\"Browse_container__TIWtZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__C1Da8\",\"active\":\"Navbar_active__1CLXN\",\"textMovie\":\"Navbar_textMovie__3erSq\",\"searchIcon\":\"Navbar_searchIcon__3OLij\",\"content\":\"Navbar_content__2fYQQ\",\"navBarImg\":\"Navbar_navBarImg__2piU4\",\"information\":\"Navbar_information__Ba8k4\",\"listBtn\":\"Navbar_listBtn__p_Vwt\",\"FilmsLoading\":\"Navbar_FilmsLoading__3vXVW\",\"FilmsError\":\"Navbar_FilmsError__2kAKb\"};"],"sourceRoot":""}